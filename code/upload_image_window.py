#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Mar 09, 2020 09:20:31 AM IST  platform: Windows NT

import sys
from tkinter import *
from PIL import *
import os
import numpy
import upload_image_window_support
from tkinter import filedialog
from PIL import Image

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True






def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    Upload_Photo_Window = Upload_Image_Window (root)
    upload_image_window_support.init(root, Upload_Photo_Window)
    root.mainloop()

w = None
def create_Upload_Image_Window(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    Upload_Photo_Window = Upload_Image_Window (w)
    upload_image_window_support.init(w, Upload_Photo_Window, *args, **kwargs)
    return (w, Upload_Photo_Window)

def destroy_Upload_Image_Window():
    global w
    w.destroy()
    w = None

class Upload_Image_Window():
    #n=int()
    a=[]
    def ensure_dir(self,file_path):
        if not os.path.exists(file_path):
            os.makedirs(file_path)
    def openimage(self):
        filez =  filedialog.askopenfilename(multiple=True,initialdir = "D:",title = "choose your file",filetypes = (("jpeg files","*.jpg"),("all files","*.*")))
        #print(filez)
        #prglobal a=[]int(filez)
        print(filez)
        for i in filez:
            #z = i.replace("/","\") 
            self.a.append(i)
        print(self.a)
        #n=len(a)
        #return a
        #img = Image.open(filename)#img.save()
    def saveimage(self):
         
         pathimage=self.Folder_Name_Entry.get()
         systempath=os.getcwd()
         newpath=systempath+"/"+"images/"+pathimage
         self.ensure_dir(newpath)
         for j in self.a:
              base=os.path.basename(j)
              base4=base[:-4]
            #   dest=newpath+"/"+base
            #   print(dest)
            #   os.rename(j,dest)

              file = open(newpath+"\\"+base4+"-Copy.png", "wb")
              with open(j, "rb") as f:
                 while True:
                   byte = f.read(1)
                   if not byte:
                     break
                   file.write(byte)
            #   Image2 = Image.open(j) 
            #   Image2copy = Image2.copy()
            #   Image2.save(dest) 
             
            #fp=open(j,"wb")
            #j="r"+"\""+j+"\""
            #print(j)
            #self.fp=open(j,"wb")
            #print(j)
            #self.img =Image.open(j) 
            # self.im = numpy.array(self.img)
            # self.fft_mag = numpy.abs(numpy.fft.fftshift(numpy.fft.fft2(self.im)))

            # self.visual = numpy.log(self.fft_mag)
            # self.visual = (self.visual - self.visual.min()) / (self.visual.max() - self.visual.min())

            # self.result = Image.fromarray((self.visual * 255).astype(numpy.uint8))
            #self.img.save(newpath)
        


    def __init__(self, Upload_Photo_Window=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font9 = "-family {Segoe UI} -size 9 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        Upload_Photo_Window.geometry("600x425+650+150")
        Upload_Photo_Window.minsize(148, 1)
        Upload_Photo_Window.maxsize(1924, 1030)
        Upload_Photo_Window.resizable(1, 1)
        Upload_Photo_Window.title("UPLOAD IMAGE WINDOW")
        Upload_Photo_Window.configure(background="#40b3a2")

        self.menubar = tk.Menu(Upload_Photo_Window,font=font9,bg=_bgcolor,fg=_fgcolor)
        Upload_Photo_Window.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(Upload_Photo_Window,tearoff=0)
        self.menubar.add_cascade(menu=self.sub_menu,
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                compound="left",
                foreground="#000000",
                label="File")
        self.sub_menu.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                foreground="#000000",
                label="Exit",
                command= upload_image_window_support.destroy_window)

        self.Select_Image_Button = tk.Button(Upload_Photo_Window)
        self.Select_Image_Button.place(relx=0.167, rely=0.165, height=43
                , width=148)
        self.Select_Image_Button.configure(activebackground="#ececec")
        self.Select_Image_Button.configure(activeforeground="#000000")
        self.Select_Image_Button.configure(background="#d9d9d9")
        self.Select_Image_Button.configure(disabledforeground="#a3a3a3")
        self.Select_Image_Button.configure(foreground="#000000")
        self.Select_Image_Button.configure(font="-family {Helvetica} -size 13 -weight normal")
        self.Select_Image_Button.configure(highlightbackground="#d9d9d9")
        self.Select_Image_Button.configure(highlightcolor="black")
        self.Select_Image_Button.configure(pady="0")
        self.Select_Image_Button.configure(text='''Select Image''')
        self.Select_Image_Button.configure(command=self.openimage)

        # self.Select_Image_Label = tk.Label(Upload_Photo_Window)
        # self.Select_Image_Label.place(relx=0.517, rely=0.165, height=36
        #         , width=152)
        # self.Select_Image_Label.configure(background="#ffffff")
        # self.Select_Image_Label.configure(font="-family {Helvetica} -size 13 -weight normal")
        # self.Select_Image_Label.configure(disabledforeground="#a3a3a3")
        # self.Select_Image_Label.configure(foreground="#000000")
        #self.Select_Image_Label.configure(text=str(n))


        self.Upload_Button = tk.Button(Upload_Photo_Window)
        self.Upload_Button.place(relx=0.383, rely=0.729, height=43, width=109)
        self.Upload_Button.configure(activebackground="#ececec")
        self.Upload_Button.configure(activeforeground="#000000")
        self.Upload_Button.configure(background="#d9d9d9")
        self.Upload_Button.configure(font="-family {Helvetica} -size 13 -weight normal")
        self.Upload_Button.configure(disabledforeground="#a3a3a3")
        self.Upload_Button.configure(foreground="#000000")
        self.Upload_Button.configure(highlightbackground="#d9d9d9")
        self.Upload_Button.configure(highlightcolor="black")
        self.Upload_Button.configure(pady="0")
        self.Upload_Button.configure(text='''Save Image''')
        self.Upload_Button.configure(command=self.saveimage)

        self.Folder_Name_Label = tk.Label(Upload_Photo_Window)
        self.Folder_Name_Label.place(relx=0.183, rely=0.447, height=36
                , width=132)
        self.Folder_Name_Label.configure(background="#d9d9d9")
        self.Folder_Name_Label.configure(font="-family {Helvetica} -size 13 -weight normal")
        self.Folder_Name_Label.configure(disabledforeground="#a3a3a3")
        self.Folder_Name_Label.configure(foreground="#000000")
        self.Folder_Name_Label.configure(text='''Date :''')

        self.Folder_Name_Entry = tk.Entry(Upload_Photo_Window)
        self.Folder_Name_Entry.place(relx=0.467, rely=0.447, height=34
                , relwidth=0.34)
        self.Folder_Name_Entry.configure(background="white")
        self.Folder_Name_Entry.configure(font="-family {Helvetica} -size 13 -weight normal")
        self.Folder_Name_Entry.configure(disabledforeground="#a3a3a3")
        self.Folder_Name_Entry.configure(font="-family {Courier New} -size 10")
        self.Folder_Name_Entry.configure(foreground="#000000")
        self.Folder_Name_Entry.configure(insertbackground="black")
  
if __name__ == '__main__':
    vp_start_gui()





