#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Feb 21, 2020 07:59:15 PM IST  platform: Windows NT

import sys
from PIL import Image, ImageTk

import home_window_support
import os.path


import department_window
import department_window_support
import screening_camp_window
import screening_camp_window_support
import turnover_window
import turnover_window_support
import satelite_window
import satelite_window_support
import view_data_window1
import view_data_window1_support
import department_single_window
import department_single_window_support
import satellite_singe_window
import satellite_singe_window_support
import turnover_single_window
import turnover_single_window_support


try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True



def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = Home_Window (root)
    home_window_support.init(root, top)
    root.mainloop()

w = None
def create_Home_Window(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    rt = root
    w = tk.Toplevel (root)
    top = Home_Window (w)
    home_window_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Home_Window():
    global w
    w.destroy()
    w = None

class Home_Window:

    def department(self):
        department_single_window.create_Department_Single_Window(root)

    def screen(self):
        screening_camp_window.create_Screening_Camp_Window(root)

    def turnover(self):
        turnover_single_window.create_Turnover_Single_Window(root)

    def satellite(self):
        satellite_singe_window.create_Satellite_Single_Window(root)
        
    def viewdata(self):
        view_data_window1.create_view_data_window(root)


    def __init__(self, Home_Window=None):
        '''This class configures and populates the toplevel window.
           Home_Window is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font14 = "-family {Helvetica} -size 15 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 9 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        Home_Window.geometry("1491x789+-13+0")
        Home_Window.minsize(500, 500)
        Home_Window.maxsize(4112, 1030)
        Home_Window.resizable(1, 1)
        Home_Window.title("HOME WINDOW")
        Home_Window.configure(background="#40b3a2")

        self.menubar = tk.Menu(Home_Window, font=font9, bg=_bgcolor, fg=_fgcolor)
        Home_Window.configure(menu = self.menubar)

        self.File = tk.Menu(Home_Window, tearoff=0)
        self.menubar.add_cascade(menu=self.File,
                                 activebackground="#ececec",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 compound="left",
                                 foreground="#000000",
                                 label="File")
        self.File.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                foreground="#000000",
                label="Exit",
                command=home_window_support.destroy_window)

        self.Photo_Label = tk.Label(Home_Window)
        self.Photo_Label.place(relx=0.174, rely=-0.013, relheight= 1.009, relwidth = 0.826) 
        self.Photo_Label.configure(background="#f7ebbb", disabledforeground="#a3a3a3", foreground="#000000")
        photo_location = os.path.join(prog_location,"ironman.jpg")
        global _img0
        _img0 = ImageTk.PhotoImage(file=photo_location)
        self.Photo_Label.configure(image=_img0, relief="sunken")

        self.Label1 = tk.Label(Home_Window)
        self.Label1.place(relx=-0.007, rely=0.0, relheight= 0.198,relwidth = 0.182)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(cursor="fleur")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,"OPI2.jpeg")
        global _img1
        _img1 = ImageTk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img1)
        self.Label1.configure(relief="sunken")
        self.Label1.configure(text='''Label''')

        self.Depatment_Button = tk.Button(Home_Window)
        self.Depatment_Button.place(relx=0.02, rely=0.228,relheight= 0.067,relwidth = 0.131)
        self.Depatment_Button.configure(activebackground="#ececec")
        self.Depatment_Button.configure(activeforeground="#000000")
        self.Depatment_Button.configure(background="#d9d9d9")
        self.Depatment_Button.configure(disabledforeground="#a3a3a3")
        self.Depatment_Button.configure(font=font14)
        self.Depatment_Button.configure(foreground="#000000")
        self.Depatment_Button.configure(highlightbackground="#d9d9d9")
        self.Depatment_Button.configure(highlightcolor="black")
        self.Depatment_Button.configure(pady="0")
        self.Depatment_Button.configure(command=self.department,text='''Department''')

        self.Screening_Camp_Button = tk.Button(Home_Window)
        self.Screening_Camp_Button.place(relx=0.02, rely=0.317,relheight= 0.067,relwidth = 0.131)
        self.Screening_Camp_Button.configure(activebackground="#ececec")
        self.Screening_Camp_Button.configure(activeforeground="#000000")
        self.Screening_Camp_Button.configure(background="#d9d9d9")
        self.Screening_Camp_Button.configure(disabledforeground="#a3a3a3")
        self.Screening_Camp_Button.configure(font=font14)
        self.Screening_Camp_Button.configure(foreground="#000000")
        self.Screening_Camp_Button.configure(highlightbackground="#d9d9d9")
        self.Screening_Camp_Button.configure(highlightcolor="black")
        self.Screening_Camp_Button.configure(pady="0")
        self.Screening_Camp_Button.configure(command=self.screen,text='''Dental Camp''')

        self.Turnover_Camp_Button = tk.Button(Home_Window)
        self.Turnover_Camp_Button.place(relx=0.02, rely=0.406, relheight= 0.067,relwidth = 0.131)
        self.Turnover_Camp_Button.configure(activebackground="#ececec")
        self.Turnover_Camp_Button.configure(activeforeground="#000000")
        self.Turnover_Camp_Button.configure(background="#d9d9d9")
        self.Turnover_Camp_Button.configure(disabledforeground="#a3a3a3")
        self.Turnover_Camp_Button.configure(font=font14)
        self.Turnover_Camp_Button.configure(foreground="#000000")
        self.Turnover_Camp_Button.configure(highlightbackground="#d9d9d9")
        self.Turnover_Camp_Button.configure(highlightcolor="black")
        self.Turnover_Camp_Button.configure(pady="0")
        self.Turnover_Camp_Button.configure(command=self.turnover,text='''Turnover Camp''')

        self.Satellite_Button = tk.Button(Home_Window)
        self.Satellite_Button.place(relx=0.02, rely=0.494, relheight= 0.067, relwidth = 0.131)
        self.Satellite_Button.configure(activebackground="#ececec")
        self.Satellite_Button.configure(activeforeground="#000000")
        self.Satellite_Button.configure(background="#d9d9d9")
        self.Satellite_Button.configure(disabledforeground="#a3a3a3")
        self.Satellite_Button.configure(font=font14)
        self.Satellite_Button.configure(foreground="#000000")
        self.Satellite_Button.configure(highlightbackground="#d9d9d9")
        self.Satellite_Button.configure(highlightcolor="black")
        self.Satellite_Button.configure(pady="0")
        self.Satellite_Button.configure(command=self.satellite,text='''Satellite Centres''')

        self.View_Data_Button = tk.Button(Home_Window)
        self.View_Data_Button.place(relx=0.02, rely=0.594,relheight= 0.067,relwidth = 0.131)
        self.View_Data_Button.configure(activebackground="#ececec")
        self.View_Data_Button.configure(activeforeground="#000000")
        self.View_Data_Button.configure(background="#d9d9d9")
        self.View_Data_Button.configure(disabledforeground="#a3a3a3")
        self.View_Data_Button.configure(font=font14)
        self.View_Data_Button.configure(foreground="#000000")
        self.View_Data_Button.configure(highlightbackground="#d9d9d9")
        self.View_Data_Button.configure(highlightcolor="black")
        self.View_Data_Button.configure(pady="0")
        self.View_Data_Button.configure(command=self.viewdata,text='''View Data''')

if __name__ == '__main__':
    vp_start_gui()





